plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
}

android {
    compileSdkVersion project.ext.sharedCompileSdkVersion

    kotlinOptions {
        jvmTarget = '1.8'
    }

    defaultConfig {
        minSdkVersion project.ext.sharedMinSdkVersion
        targetSdkVersion project.ext.sharedTargetSdkVersion
        versionCode project.ext.appVersionCode
        versionName project.ext.appVersionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kapt {
        correctErrorTypes true
    }

    hilt {
        enableAggregatingTask = true
    }
}

dependencies {

    // internal dependencies
    implementation project(':sample-data-access')


    // third party dependencies

    // Dagger/Hilt for Dependency Injection
    implementation "com.google.dagger:hilt-android:${versions.dagger}"
    kapt "com.google.dagger:hilt-compiler:${versions.dagger}"

    /*
     * These dependencies are confined in the data layer.
     * They should NOT be used elsewhere, and the 'implementation' non-transitive dependency makes
      * sure they're not available at compile time outside of the 'sample-data' module.
     */
    implementation "com.squareup.okhttp3:okhttp:${versions.okhttp}"
    implementation "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"
    implementation "com.squareup.moshi:moshi:${versions.moshi}"
    implementation "com.squareup.moshi:moshi-kotlin:${versions.moshi}"


    // unit test dependencies
    testImplementation "junit:junit:${versions.junit}"

}